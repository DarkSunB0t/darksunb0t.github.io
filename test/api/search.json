[{"id":"86d4ee65b370451045ae4dad5f47ded5","title":"Ютуб ролик 1","content":"вставка ролика\n","slug":"vid-2022-1","date":"2022-12-26T16:16:00.844Z","categories_index":"Видео","tags_index":"dsb,youtube","author_index":"Aurora"},{"id":"9dc3e3fca6ccf2c51b9848cd5f1865e6","title":"Hexo - Начало работы","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\nQuick StartCreate a new post1$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server1$ hexo server\n\nMore info: Server\nGenerate static files1$ hexo generate\n\nMore info: Generating\nDeploy to remote sites1$ hexo deploy\n\nMore info: Deployment\n","slug":"tut-hexo-1","date":"2022-12-26T16:16:00.843Z","categories_index":"Видео,Уроки","tags_index":"dsb,hexo,сайт,урок,framework,web,сделай сам,терминал,консоль,linux,windows,markdown","author_index":"Aurora"},{"id":"5bf6dd6d5bcfc62e191361c7bbf33c03","title":"steamgame","content":"# hexo-tag-steamgame\n\nEmbed steam game in Hexo posts&#x2F;pages.\n中文说明\nInstallation1npm install hexo-tag-steamgame --save\n\nUseage\nEmbed a single game\n\n1&#123;% steamgame appid description %&#125;\n\n\nBulk embed games\n\n1234567&#123;% steamgames %&#125;193809017946801599660233860255710&#123;% endsteamgames %&#125;\n\nParameters\nappid: Steam game app id.\ndescription(optional): Used to replace the default game profile.\n\nDemohttps://demo.hclonely.com/posts/b0009374/\nLicenseMIT\n","slug":"hexo-tag-steamgame","date":"2022-12-26T16:16:00.842Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"d93b5039256bd1807f9e545758741a1c","title":"twitter","content":"# hexo-tag-twitter\n\nEmbed Twitter tweet tag plugin for Hexo.\nIntroductionThis is a Hexo tag plugin which allows you to embed Twitter tweet on your blog posts.\nDEMOhttps://photo-tea.com/p/hexo-tag-twitter/\nInstallation1npm install hexo-tag-twitter --save\n\nUsage1&#123;% twitter tweet-url %&#125;\n\nor\n1&#123;% twitter tweet-id user-id %&#125;\n\nIf you use tweet-id only , please edit your _config.yml\n12tagTwitter:  id: tea0828\n\nFAQPlease read here if you can not display tweet well.\nhexo-tag-twitter&#x2F;issues&#x2F;\nExampleFor example, if you want embed this tweet (This tweet tweet-id is 819885806714138624), please enter the following this.\n1. When using tweet-urlPlease edit your your-markdown.md . This way is most simple.\n1&#123;% twitter https://twitter.com/tea0828/status/819885806714138624 %&#125;\n\n2. When using tweet-id &amp; user-idFirst , please edit your _config.yml .\n12tagTwitter:  id: tea0828\n\nNext , Please edit your your-markdown.md .\n1&#123;% twitter 819885806714138624 %&#125;\n\nAlso, the above example can coding differently. Please edit your your-markdown.md for this way .\n1&#123;% twitter 819885806714138624 tea0828 %&#125;\n\n\nLicenseMIT\n","slug":"hexo-tag-twitter","date":"2022-12-26T16:16:00.842Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"## Install\n1npm install hexo-spoiler --save\n\nIf hexo can’t detect this plugin automatically, you need to modify the plugins section of [path_to_your_site]/_config.yml manually, like:\n12plugins: - hexo-spoiler\n\nSyntax1&#123;% spoiler option:value text... %&#125;\n\nAll options must match the &lt;option&gt;:&lt;value&gt; format. Texts starting from the first invalid option will be considered normal text.\nAvailable options:\n\n\n\nOption name\nType\nOption value\nEffect\n\n\n\nstyle\nstring\nblur or box\nThe spoiler text will be blurred or covered by a box. The default style is blur.\n\n\ncolor\nstring\nAll valid css colorsNO spaces allowed for inline option!\nOnly works in style:box, changes the color of the box. The default color is black\n\n\np\nboolean(in _config.yml or front-matter)string(in inline options)\nempty or any string\nThe spoiler text will be wrapped by &lt;p&gt; rather than &lt;span&gt;. Add this if you want newline before &amp; after spoiler text. For inline options, assign any value (except &quot;false&quot;) or even omit it turns this on; &quot;false&quot; means off. The default state is off.\n\n\nExamples and preview\nYou can set these options globally or for a single post or for a single usage: \nGlobal config (in blog’s _config.yml):\n12345# ... other configs# be top-levelspoiler:  style: blur  p: true\n\nConfig for single post (in post’s front-matter):\n1234567---title: blah blahspoiler:  style: box  color: yellow  p: false---\n\nConfig priority: inline option &gt; front-matter &gt; _config.yml &gt; default\nNOTE: Run hexo clean if you changed the global _config.yml.\nLimitations\nDue to the limitations of hexo tags, context-related features like markdown footnote will not be rendered correctly. The renderer instance is different from what is used in post rendering, so it has no knowledge about context.\nBlock elements like &lt;blockquote&gt;, &lt;figure&gt; is not supported.\n\n","slug":"hexo-spoiler","date":"2022-12-26T16:16:00.841Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"# hexo-generator-alias\n\n\nGenerates alias pages for redirecting to posts, pages or URL.\nInstall1$ npm install hexo-generator-alias --save\n\n\nHexo 3 &amp; 4: &gt;&#x3D; 1.0\nHexo 2: 0.1.x\n\nUsageYou can specify aliases in _config.yml:\n123alias:  api/index.html: api/classes/Hexo.html  plugins/index.html: https://github.com/tommy351/hexo/wiki/Plugins\n\nIn the above example, when you access http://example.com/api/, you will be redirected to http://example.com/api/classes/Hexo.html\nYou could also configure it in your post and page files:\n12345678910source/cv/index.md---title: some titledate: some date+ alias: about/index.html+ alias:+ - foo/index.html+ - bar/index.html---\n\nIn the above example, when you access http://example.com/about/, you will be redirected to http://example.com/cv/\nYou could also configure multiple aliases. So in the second example,\n\nhttp://example.com/foo/ ⇒ http://example.com/cv/\nhttp://example.com/bar/ ⇒ http://example.com/cv/\n\nAlias must ends with .html, examples of valid value include:\n\n“about&#x2F;index.html” (alias is http://example.com/about/)\n“foo&#x2F;bar.html” (alias is http://example.com/foo/bar)\n\nRedirectAvailable in post and page.\n123456source/cv/index.md---title: some titledate: some date+ redirect: http://target-site.com/---\n\nhttp://example.com/cv/ ⇒ http://target-site.com/\n123456source/_posts/foo.md---title: foodate: 2020-01-02 00:00:00+ redirect: /2020/03/04/bar/---\n\nhttp://example.com/2020/01/02/foo/ ⇒ http://example.com/2020/03/04/bar/\nRedirect to a postIf you specify a value without any slash, the article will be redirected to a post with that filename.\nFor example, there is an existing post “source&#x2F;_posts&#x2F;foo-post.md” that is available at http://example.com/2020/01/02/foo-post/,\n12345source/baz-page.md---title: baz+ redirect: foo-post---\n\nhttp://example.com/baz-page ⇒ http://example.com/2020/01/02/foo-post/\nIf a post could not be located (due to incorrect value), the article will be redirected to http://example.com/foo-post\n","slug":"hexo-generator-alias","date":"2022-12-26T16:16:00.840Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"f6a1e2002f17c9eaebd46f737b9ec1f3","title":"ASCII","content":"# hexo-filter-asciinema\n\n\n\nDesciptionA simple plugin which can embed asciinema-player in your article with local file.\nThough the plugin hexo-tag-asciinema does a similar thing . That one relies on asciinema.org ,  while this one relies just on local file.\nConfigurationAdd the following configuration in the _config.yml of your site.\n123# hexo-filter-asciinemaasciinema:  enable: true\n\nUsageWhen you want to add asciicast.json in your article, just put the file in the right place and write like this:\n1[@asciinema](path/to/asciicast.cast)\n\nRelease1.0.6\nupgrade asciinema.js to 3.0.0-rc.1.\nfix window.wrap error.\n\n","slug":"hexo-filterasciinema","date":"2022-12-26T16:16:00.840Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"# hexo-filter-sequence\n\n\n\n\n\n\n\n\n\n\n\n\nGenerate UML sequence diagrams for Hexo.\nInstall1npm install --save hexo-filter-sequence\n\nUsageThis plugin is based on js-sequence-diagrams, so you can defined the chart as follow:  \nsequence    Alice-&gt;Bob: Hello Bob, how are you?    Note right of Bob: Bob thinks    Bob–&gt;Alice: I am good thanks!\n\nConfigIn your site’s _config.yml:\n123456789sequence:  # webfont:     # optional, the source url of webfontloader.js  # snap:        # optional, the source url of snap.svg.js  # underscore:  # optional, the source url of underscore.js  # sequence:    # optional, the source url of sequence-diagram.js  # css: # optional, the url for css, such as hand drawn theme   options:     theme:     css_class: \nYour config will be merged into default config:\n&#123;\n  &quot;webfont&quot;: &quot;https://cdnjs.cloudflare.com/ajax/libs/webfont/1.6.27/webfontloader.js&quot;,\n  &quot;snap&quot;: &quot;https://cdnjs.cloudflare.com/ajax/libs/snap.svg/0.4.1/snap.svg-min.js&quot;,\n  &quot;underscore&quot;: &quot;https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js&quot;,\n  &quot;sequence&quot;: &quot;https://cdnjs.cloudflare.com/ajax/libs/js-sequence-diagrams/1.0.6/sequence-diagram-min.js&quot;,\n  &quot;style&quot;: &quot;&quot;,\n  &quot;options&quot;: &#123;\n    &quot;theme&quot;: &quot;simple&quot;,\n    &quot;css_class&quot;: &quot;&quot;\n  &#125;\n&#125;\n\nRelated\nhexo-toc Insert a markdown TOC before posts be rendered.\nhexo-filter-fenced-code Extend syntax for the native fenced code block.\nhexo-filter-flowchart Generate flowchart diagrams for Hexo.\nhexo-filter-sub Generate subscript (&lt;sub&gt;) tag for Hexo.\nhexo-filter-sup Generate superscript (&lt;sup&gt;) tag for Hexo.\nhexo-theme-formula Hexo theme base on jade and less.\n\nContributingPull requests and stars are highly welcome.\nFor bugs and feature requests, please create an issue.\n","slug":"hexo-filter-sequence","date":"2022-12-26T16:16:00.839Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"9f5af496934fcf0adaa32d3f2e8ab97b","title":"Covers","content":"# hexo-covers  ![Publish on NPM](https://github.com/sergeyzwezdin/hexo-covers/workflows/Publish%20on%20NPM/badge.svg?branch=master) ![](https://img.shields.io/npm/v/hexo-covers)\n\nhexo-covers is a plugin for Hexo static site generator that generates microbrowser page cover so you’ll have compelling webpage preview while sharing the link via iMessage, WhatsApp, Telegram, Facebook and others. \n\n\n\n\n\n\n\n\n\nAs more of our conversations happen in group chats and slack channels, link previews are an important way for you to engage users before they start the journey on your site. To help users take the leap and visit your site, we need to make sure that all our pages are annotated with microdata. Better yet, we can use these previews to create compelling visual summaries.\n— Colin Bendell • Microbrowsers are Everywhere\n\nGenerates preview covers for your website.\nProduces web-optimized, compressed images.\nAllows to easily customize template.\nSupports generating covers for posts, pages, tags, and categories.\n\n\nHow it works\nThe plugin scans all pages, posts, categories, and tags. \nFor every item hexo-covers runs Chromium via puppeteer and takes the screenshot.\nEvery screenshot is compressed and put into the cache folder.\nDuring the website build all covers are included in the output build.\nYou add page metadata using resolve_cover, resolve_tag_cover, resolve_category_cover helpers. For more information see below.\n\nRequirements\nHexo: 5.x\nNode 12+\n\nUsage\nOnce the plugin is installed and enabled, it will scan the website content during the build.\nCovers will be generated for all posts, pages, tags, and categories using default templates. To do that hexo-covers runs Chromium via puppeteer for every cover and takes the screenshot.\nOnce the processing of the cover is done, the result files will be stored in a special folder (/.covers/) and included in the cache manifest (/.covers/covers.json). You should not care about the folder structure in this folder. Ensure that .covers folder added to your repo. If it’s ignored, cover processing will start each time, which is time-consuming.\nIf the post title doesn’t fit the image, an error message will be generated in the console during the build. It guarantees that you won’t have “broken” previews for any page.\nOnce hexo-covers generated the covers, you’ll need to specify special meta tags so microbrowsers could discover it (for more information see below).\nYou post your link via messengers or social networks and see a nice preview 🎉\n\nDefining page metadataThe crucial part of the adding previews is page metadata. You can find more information about it here and here. In general, you’ll need to add few tags into the &lt;head&gt; section:\n12345678910111213&lt;html&gt;    &lt;head&gt;        ...        &lt;meta property=&quot;og:title&quot; content=&quot;Website title&quot; /&gt;        &lt;meta name=&quot;twitter:title&quot; content=&quot;Website title /&gt;        &lt;link rel=&quot;image_src&quot; href=&quot;&lt; link to your image preview &gt;&quot; /&gt;        &lt;meta name=&quot;twitter:image:src&quot; content=&quot;&lt; link to your image preview &gt;&quot; /&gt;        &lt;meta property=&quot;og:image&quot; content=&quot;&lt; link to your image preview &gt;&quot; /&gt;    &lt;/head&gt;    &lt;body&gt;        ...    &lt;/body&gt;&lt;/html&gt;\n\nIn addition, you can add a few more tags like og:type, og:description, og:image:type, og:image:width, og:image:height, article:author, twitter:description, twitter:site, twitter:card and others, but it’s completely up to you.\nTo add this, you’ll need to modify layout.ejs template in your theme folder. I personally prefer to determine layout type and render some partial there. This is how &lt;head&gt; section of the layout.ejs template could look:\n1234567891011121314&lt;head&gt;    ...    &lt;%_  let layout = page.layout;    if (!layout) &#123;        if (page.tag) &#123;            layout = &#x27;tag&#x27;;        &#125; else if (page.category) &#123;            layout = &#x27;category&#x27;;        &#125;    &#125; _%&gt;    &lt;%_ if (layout) &#123; _%&gt;    &lt;%- partial(`_partial/microbrowsers/$&#123;layout&#125;`) %&gt;    &lt;%_ &#125; _%&gt;&lt;/head&gt;\n\nAdding this snippet triggers partial render for every type of layout, e.g. _partial/microbrowsers/page.ejs will be generated for page layout, _partial/microbrowsers/post.ejs will be generated for post layout, etc.\nHere are a few examples of how to define these partials:\npost.ejs and page.ejs: template for post&#x2F;pageresolve_cover tag helper is used to retrieve information about the cover image.\n12345678910111213141516171819&lt;%_ const cover = resolve_cover() _%&gt;&lt;meta property=&quot;og:type&quot; content=&quot;article&quot; /&gt;&lt;meta property=&quot;og:url&quot; content=&quot;&lt;%= page.permalink %&gt;&quot; /&gt;&lt;meta property=&quot;og:title&quot; content=&quot;&lt;%= page.title %&gt;&quot; /&gt;&lt;meta property=&quot;og:description&quot; content=&quot;&lt;%= page.description %&gt;&quot; /&gt;&lt;%_ if (cover) &#123; _%&gt;    &lt;link rel=&quot;image_src&quot; href=&quot;&lt;%= full_url_for(cover.file) %&gt;&quot; /&gt;    &lt;meta property=&quot;og:image&quot; content=&quot;&lt;%= full_url_for(cover.file) %&gt;&quot; /&gt;    &lt;meta property=&quot;og:image:type&quot; content=&quot;image/&lt;%= cover.type %&gt;&quot; /&gt;    &lt;meta property=&quot;og:image:width&quot; content=&quot;&lt;%= cover.dimensions.w %&gt;&quot; /&gt;    &lt;meta property=&quot;og:image:height&quot; content=&quot;&lt;%= cover.dimensions.h %&gt;&quot; /&gt;&lt;%_ &#125; _%&gt;&lt;meta name=&quot;twitter:title&quot; content=&quot;&lt;%= page.title %&gt;&quot; /&gt;&lt;meta name=&quot;twitter:description&quot; content=&quot;&lt;%= page.description %&gt;&quot; /&gt;&lt;meta property=&quot;twitter:url&quot; content=&quot;&lt;%= page.permalink %&gt;&quot; /&gt;&lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot; /&gt;&lt;%_ if (cover) &#123; _%&gt;    &lt;meta name=&quot;twitter:image:src&quot; content=&quot;&lt;%= full_url_for(cover.file) %&gt;&quot; /&gt;&lt;%_ &#125; _%&gt;\n\ntag.ejs: template for tagresolve_tag_cover tag helper should be used instead of &#96;&#96;resolve_cover&#96;.\n123456789101112131415&lt;%_ const cover = resolve_tag_cover(page.tag) _%&gt;&lt;meta property=&quot;og:type&quot; content=&quot;article&quot; /&gt;&lt;meta property=&quot;og:title&quot; content=&quot;&lt;%= page.tag %&gt;&quot; /&gt;&lt;%_ if (cover) &#123; _%&gt;    &lt;link rel=&quot;image_src&quot; href=&quot;&lt;%= full_url_for(cover.file) %&gt;&quot; /&gt;    &lt;meta property=&quot;og:image&quot; content=&quot;&lt;%= full_url_for(cover.file) %&gt;&quot; /&gt;    &lt;meta property=&quot;og:image:type&quot; content=&quot;image/&lt;%= cover.type %&gt;&quot; /&gt;    &lt;meta property=&quot;og:image:width&quot; content=&quot;&lt;%= cover.dimensions.w %&gt;&quot; /&gt;    &lt;meta property=&quot;og:image:height&quot; content=&quot;&lt;%= cover.dimensions.h %&gt;&quot; /&gt;&lt;%_ &#125; _%&gt;&lt;meta name=&quot;twitter:title&quot; content=&quot;&lt;%= page.tag %&gt;&quot; /&gt;&lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot; /&gt;&lt;%_ if (cover) &#123; _%&gt;    &lt;meta name=&quot;twitter:image:src&quot; content=&quot;&lt;%= full_url_for(cover.file) %&gt;&quot; /&gt;&lt;%_ &#125; _%&gt;\n\ncategory.ejs: template for categoryresolve_category_cover tag helper should be used instead of &#96;&#96;resolve_cover&#96;.\n123456789101112131415&lt;%_ const cover = resolve_category_cover(page.category) _%&gt;&lt;meta property=&quot;og:type&quot; content=&quot;article&quot; /&gt;&lt;meta property=&quot;og:title&quot; content=&quot;&lt;%= page.category %&gt;&quot; /&gt;&lt;%_ if (cover) &#123; _%&gt;    &lt;link rel=&quot;image_src&quot; href=&quot;&lt;%= full_url_for(cover.file) %&gt;&quot; /&gt;    &lt;meta property=&quot;og:image&quot; content=&quot;&lt;%= full_url_for(cover.file) %&gt;&quot; /&gt;    &lt;meta property=&quot;og:image:type&quot; content=&quot;image/&lt;%= cover.type %&gt;&quot; /&gt;    &lt;meta property=&quot;og:image:width&quot; content=&quot;&lt;%= cover.dimensions.w %&gt;&quot; /&gt;    &lt;meta property=&quot;og:image:height&quot; content=&quot;&lt;%= cover.dimensions.h %&gt;&quot; /&gt;&lt;%_ &#125; _%&gt;&lt;meta name=&quot;twitter:title&quot; content=&quot;&lt;%= page.category %&gt;&quot; /&gt;&lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot; /&gt;&lt;%_ if (cover) &#123; _%&gt;    &lt;meta name=&quot;twitter:image:src&quot; content=&quot;&lt;%= full_url_for(cover.file) %&gt;&quot; /&gt;&lt;%_ &#125; _%&gt;\n\n\nAdditional data for pages and postsYou can specify custom data for every page that will be passed in the template during the build. To do that add the cover key in page&#x2F;post frontmatter:\n12345678910111213---title: Test postcover:    title: My test post    image: wp3060116.jpg    hide_logo: false    hide_title: false    hide_subtitle: false    disable_fade: false    raw: false---Post text\n\nThere are few predefined key that you can pass in frontmatter:\n\ntitle — overrides title of the post in the cover\nimage — custom background image for the cover\nhide_logo — hides blog logo\nhide_title — hides post title\nhide_subtitle — hides post sub-title\ndisable_fade — disables background fading\nraw — do not process the cover with standard workflow, just copy image instead\n\nYou can use these params if you use the default template. You can also specify your own keys - all of them will be passed into the template as a query string params. It’s useful when you build a custom template and want to show more data.\nAdditional data for tags and categoriesBy default covers for tags and categories generated with name that passed from the URL (e.g. for /tag/aspnet the name will be aspnet). If you want to display a friendly name for tags and categories, you can specify it in an additional data file.\nTo do that add special configuration key source.categories.data and source.tags.data and specify a relative path to the data files (find more information in Configuration section below).\nHere is an example of how you can define the data file:\n1234567aspnet:    title: ASP.NET    background: aspnet.webpfrontend:    title: Frontend Development    background: frontend.webp\n\nIn addition, you can specify background images and other custom keys that will be passed in the template file during the build via query string parameters. Also, you’ll need to specify source.categories.images and source.tags.images parameters in configuration to be able to override cover background via data file.\nTemplatesHow the default template worksThe template is a regular HTML file. During the cover build hexo-covers starts web-server that serves the template. After that puppeteer is used to take a screenshot of the page.\nThere is a default template that looks like this way:\n\nIf you are OK with the style of the default template, you do not need to do anything about it. If you want to customize the look of the cover, read the next section.\nCustomizing the templateIf you want to customize the look of the cover, feel free to create an HTML file somewhere in the project folder. To let hexo-covers know where is your template located, specify the relative path in the templates section of configuration (see below). Optionally, you can define additional images that will be passed into the template. All paths are relative, so you can use any images from your project you want.\nUse the default template as a reference on how to create your own template. Pay attention to JavaScript code in the default template. There is a code to extract params from the query string (which passed by hexo-covers) as well as the code that throws an error when title text is too large to render.\nAny JavaScript error that throws on the template page will generate error in Hexo console during the build. It introduced intentionally to avoid generating “broken” covers.\nConfigurationTo configure the plugin add covers key to the Hexo config file. For example:\n1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950covers:    enable: true    title: &#x27;Your blog title&#x27;    base_dir: &#x27;.covers&#x27;    manifestFileName: &#x27;covers.json&#x27;    include:        - keywords    tagsUrl: tag    categoriesUrl: category    compress: true    source:        categories:            data: _data/categories.yml            images: _covers/categories        tags:            data: _data/tags.yml            images: _covers/tags    templates:        page:            path: themes/theme1/layout/microbrowser-template/page.html            images:                logo: themes/theme1/source/assets/favicon/favicon-194x194.png                background: themes/theme1/layout/microbrowser-template/bg.svg            dimensions:                width: 964                height: 504        post:            path: themes/theme1/layout/microbrowser-template/post.html            images:                logo: themes/theme1/source/assets/favicon/favicon-194x194.png                background: themes/theme1/layout/microbrowser-template/bg.svg            dimensions:                width: 964                height: 504        category:            path: themes/theme1/layout/microbrowser-template/category.html            images:                logo: themes/theme1/source/assets/favicon/favicon-194x194.png                background: themes/theme1/layout/microbrowser-template/bg.svg            dimensions:                width: 964                height: 504        tag:            path: themes/theme1/layout/microbrowser-template/tag.html            images:                logo: themes/theme1/source/assets/favicon/favicon-194x194.png                background: themes/theme1/layout/microbrowser-template/bg.svg            dimensions:                width: 964                height: 504\n\n\n\n\nKey\nRequired\nDefault value\nDescription\n\n\n\nenable\nfalse\ntrue\nFlag to disable plugin execution.\n\n\ntitle\nfalse\nYour website title in Hexo configuration\nThe website title value that will be passed into the template.\n\n\nbase_dir\nfalse\n.images\nDirectory name to store cover cache.\n\n\nmanifestFileName\nfalse\nimages.json\nFile name to store cover cache manifest (for more info see below).\n\n\ninclude\nfalse\n[ keywords ]\nFrontmatter keys that will be available at the template during preview generating.\n\n\ntagsUrl\nfalse\ntag\nThe URL where tag covers will be produced.\n\n\ncategoriesUrl\nfalse\ntag\nThe URL where category covers will be produced.\n\n\ncompress\nfalse\ntrue\nDetermines if output cover images will be compressed.\n\n\nsource.categories.data\nfalse\n_data/categories.yml\nPath to yaml file that provides additional data for categories (for more information see above).\n\n\nsource.categories.images\nfalse\n_covers/categories\nPath to images folder for categories (for more information see above).\n\n\nsource.tags.data\nfalse\n_data/tags.yml\nPath to yaml file that provides additional data for tags (for more information see above).\n\n\nsource.tags.images\nfalse\n_covers/tags\nPath to images folder for tags (for more information see above).\n\n\ntemplates\nfalse\n\nDefinition of templates for pages, posts, tags, and categories.\n\n\ntemplates.page.pathtemplates.post.pathtemplates.category.pathtemplates.tag.path\ntrue\nPath to default template\nRelative path to template file.\n\n\ntemplates.page.imagestemplates.post.imagestemplates.category.imagestemplates.tag.images\nfalse\n&#123; background: &quot;lib/templates/bg.svg&quot; &#125;\nImages that will be passed into template during generating.\n\n\ntemplates.page.dimensionstemplates.post.dimensionstemplates.category.dimensionstemplates.tag.dimensions\ntrue\n&#123; width: 964, height: 504 &#125;\nSize of generated cover image for the template.\n\n\nManifestNormally, you shouldn’t care about the manifest structure. But if you’re curious, the manifest is a JSON file that contains key-value collection of processed files. The key is a relative path to the image. The value is information about the processed cover. All items are grouped into sections — tags, categories, pages, posts.\nHere is an example:\n1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950&#123;    &quot;tags&quot;: &#123;        &quot;dotnet&quot;: &#123;            &quot;file&quot;: &quot;tags/8ec70aeb/dotnet@cover.jpg&quot;,            &quot;size&quot;: 17476,            &quot;hash&quot;: &quot;8ec70aebbc51e28b158a13af745f1bb3&quot;,            &quot;type&quot;: &quot;jpg&quot;,            &quot;dimensions&quot;: &#123;                &quot;w&quot;: 964,                &quot;h&quot;: 504            &#125;        &#125;    &#125;,    &quot;categories&quot;: &#123;        &quot;mobile&quot;: &#123;            &quot;file&quot;: &quot;categories/95306cf2/mobile@cover.jpg&quot;,            &quot;size&quot;: 28816,            &quot;hash&quot;: &quot;95306cf2703054c1fe91c432f82a8721&quot;,            &quot;type&quot;: &quot;jpg&quot;,            &quot;dimensions&quot;: &#123;                &quot;w&quot;: 964,                &quot;h&quot;: 504            &#125;        &#125;    &#125;,    &quot;pages&quot;: &#123;        &quot;terms/index.md&quot;: &#123;            &quot;file&quot;: &quot;pages/83c8a774/index@cover.jpg&quot;,            &quot;size&quot;: 34955,            &quot;hash&quot;: &quot;83c8a77498a457a187a007c7f4a408c7&quot;,            &quot;type&quot;: &quot;jpg&quot;,            &quot;dimensions&quot;: &#123;                &quot;w&quot;: 964,                &quot;h&quot;: 504            &#125;        &#125;    &#125;,    &quot;posts&quot;: &#123;        &quot;_posts/2014/fronttalks-2014.md&quot;: &#123;            &quot;file&quot;: &quot;posts/2c7f8a02/fronttalks_2014@cover.jpg&quot;,            &quot;size&quot;: 29735,            &quot;hash&quot;: &quot;2c7f8a02c9c676e12487c0fc64e65c4f&quot;,            &quot;type&quot;: &quot;jpg&quot;,            &quot;dimensions&quot;: &#123;                &quot;w&quot;: 964,                &quot;h&quot;: 504            &#125;        &#125;    &#125;&#125;\n\nIn page template you can also access cover property that will contain the part of the manifest that related to the current page.\n","slug":"hexo-covers","date":"2022-12-26T16:16:00.838Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"hexo-codepen [![NPM version][npm-image]][npm-url] [![Dependency Status][depstat-image]][depstat-url]\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\nA better version of hexo-tag-codepen with a valid HTML.\n\n\n\n\n\n\n\n\n\nHexo tag to embed code snippet from CodePen\nInstallInstall using npm.\n$ npm install hexo-codepen --save\n\nor using yarn\n$ yarn add hexo-codepen\n\nUsageCreate Embedded Pen with following syntax:\n1&#123;% codepen userId|anonymous|anon slugHash theme [defaultTab [height [width]]] %&#125;\nHow to get arguments from CodePen embedThis is something generated by CodePen:\n12&lt;p data-height=&quot;265&quot; data-theme-id=&quot;dark&quot; data-slug-hash=&quot;bgjKKE&quot; data-default-tab=&quot;css,result&quot; data-user=&quot;CiTA&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;CSS sidebar toggle&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/CiTA/pen/bgjKKE/&quot;&gt;CSS sidebar toggle&lt;/a&gt; by Silvestar Bistrović (&lt;a href=&quot;https://codepen.io/CiTA&quot;&gt;@CiTA&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;&lt;script async src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;\nYou can extract required arguments:\n\n\n\nField\nValue\n\n\n\nuserId\nCiTA\n\n\nslugHash\nbgjKKE\n\n\ntheme\ndark\n\n\ndefaultTab\ncss,result\n\n\nheight\n265\n\n\nwidth\nThis value should be adjusted according to your blog theme, by default it is 100%\n\n\nLicenseMIT\n\n","slug":"hexo-codepen","date":"2022-12-26T16:16:00.837Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\nQuick StartCreate a new post1$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server1$ hexo server\n\nMore info: Server\nGenerate static files1$ hexo generate\n\nMore info: Generating\nDeploy to remote sites1$ hexo deploy\n\nMore info: Deployment\n","slug":"hello-world","date":"2022-12-26T16:16:00.836Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"# hexo-blog-encrypt\n\n\n中文说明\nWhat’s this\nFirst of all, the BEST post encryption plugin in the universe for hexo.(But what about the other plugins?)\n\nIt is for those who write a post, but don’t want everyone to read it. Thus, password is required in certain pages to access these encrypted posts.\n\nEncryption is simple on wordpress, emlog or other blog systems, except hexo. :(\n\nSo it’s “hexo-blog-encrypt”‘s time.\n\n\nFeatures\nOnce you enter the correct password, you can get the access to encrypted posts, and the password is remembered locally. Press the button again, and the stored password will be erased. If there’re scripts in the post, they will be executed once the post is decrypted.\n\nSupport preset tag-specified password.\n\nAll functions are provided by the native APIs. We use Crypto in Node.js, and use Web Crypto API in Browsers.\n\nPBKDF2, SHA256 is used to derive keys, We use AES256-CBC to encrypt and decrypt data, we also use HMAC to verify message authentication codes to make sure the posts are decrypted well and not modified.\n\nPromise is widely used to make sure our main procedures are asynchronous, so that there is little chance for the process to be blocked, and the experience will be more fluent.\n\nTemplate theme supported, you can use [default, blink, flip, shrink, surge, up, wave, xray] to set up your template theme, and CHECK ONLINE.\n\nOutdated browsers may not work well. In such case, please upgrade your browser.\n\n\nOnline demo\nSee Demo Page, all passwords are hello.\n\nInstall\nnpm install --save hexo-blog-encrypt\n\nor yarn add hexo-blog-encrypt (require Yarn)\n\n\nQuick start\nAdd the “password” value to your post’s front matter like:\n\n1234567---title: Hello Worlddate: 2016-03-30 21:18:02password: hello---\n\n\nThen use hexo clean &amp;&amp; hexo g &amp;&amp; hexo s to see your encrypted post locally.\n\nPassword Prioritypost’s front matter &gt; encrypt tags\nAdvanced settingsin post’s front matter12345678910111213---title: Hello Worldtags:- encryptAsDiarydate: 2016-03-30 21:12:21password: mikemessiabstract: Here&#x27;s something encrypted, password is required to continue reading.message: Hey, password is required here.wrong_pass_message: Oh, this is an invalid password. Check and try again, please.wrong_hash_message: Oh, these decrypted content cannot be verified, but you can still have a look.---\n\nIn _config.ymlExample12345678910# Securityencrypt: # hexo-blog-encrypt  abstract: Here&#x27;s something encrypted, password is required to continue reading.  message: Hey, password is required here.  tags:  - &#123;name: encryptAsDiary, password: passwordA&#125;  - &#123;name: encryptAsTips, password: passwordB&#125;  wrong_pass_message: Oh, this is an invalid password. Check and try again, please.  wrong_hash_message: Oh, these decrypted content cannot be verified, but you can still have a look.\n\nTo disable tag encryptionJust set the password property in front matter to &quot;&quot;.\nExample:\n123456789---title: Callback Testdate: 2019-12-21 11:54:07tags:    - A Tag should be encryptedpassword: &quot;&quot;---Use a &quot;&quot; to disable tag encryption.\n\nConfig prioritypost’s front matter &gt; _config.yml (in the root directory) &gt; default\nAbout CallbackIn some blogs, some elements may not be displayed normally after decryption. This is a known issue. The current solution is to check the code in your blog to learn which functions are called when the onload event occurs.Then write these code at the end of your post. For example:\n123456789101112131415---title: Callback Testdate: 2019-12-21 11:54:07tags:    - Encrypted---This is a blog to test Callback functions. You just need to add code at the end of your post as follows:It will be called after the blog is decrypted.&lt;script&gt;    // add script tag and code at the end of your post    alert(&quot;Hello World&quot;);&lt;/script&gt;\n\nDemo: Callback Example.\nEncrypt TOCIf you has a post with TOC, you should change the code of your template. Take the default theme ‘landscape’ as an example:\n\nYou should find the article.ejs file located at hexo/themes/landscape/layout/_partial/article.ejs.\nFind the code like &lt;% post.content %&gt;, which is usually at line 30.\nReplace the &lt;% post.content %&gt; with the following code block:\n\n1234567891011&lt;% if(post.toc == true)&#123; %&gt;  &lt;div id=&quot;toc-div&quot; class=&quot;toc-article&quot; &lt;% if (post.encrypt == true) &#123; %&gt;style=&quot;display:none&quot; &lt;% &#125; %&gt;&gt;    &lt;strong class=&quot;toc-title&quot;&gt;Index&lt;/strong&gt;      &lt;% if (post.encrypt == true) &#123; %&gt;        &lt;%- toc(post.origin, &#123;list_number: true&#125;) %&gt;      &lt;% &#125; else &#123; %&gt;        &lt;%- toc(post.content, &#123;list_number: true&#125;) %&gt;      &lt;% &#125; %&gt;  &lt;/div&gt;&lt;% &#125; %&gt;&lt;%- post.content %&gt;\n\nDisable loggingIf you want to disable the logging, you can add a silent property in _config.yml and set it to true.\n123# Securityencrypt: # hexo-blog-encrypt  silent: true\n\nThis would disable the logging like INFO  hexo-blog-encrypt: encrypting &quot;&#123;Blog Name&#125;&quot; based on Tag: &quot;EncryptedTag&quot;..\nEncrypt ThemePreviously, we use template to let users modify their own themes. Turn out that it’s not a simple way. So, we are introducing this feature here.\nYou can simply use theme in _config.yml or in header like:\nIn post’s front matter12345678---title: Theme testdate: 2019-12-21 11:54:07tags:    - A Tag should be encryptedtheme: xraypassword: &quot;hello&quot;---\n\nIn _config.ymlThis would be a default one.\n1234567891011# Securityencrypt: # hexo-blog-encrypt  abstract: Here&#x27;s something encrypted, password is required to continue reading.  message: Hey, password is required here.  tags:  - &#123;name: encryptAsDiary, password: passwordA&#125;  - &#123;name: encryptAsTips, password: passwordB&#125;  theme: xray  wrong_pass_message: Oh, this is an invalid password. Check and try again, please.  wrong_hash_message: Oh, these decrypted content cannot be verified, but you can still have a look.\n\nCheck them online, and PICK one:\n\ndefault\nblink\nshrink\nflip\nup\nsurge\nwave\nxray\n\nLicenseSee LICENSE file.\nThanksCollaborator - xiazeyu\n","slug":"hexo-blog-encrypt","date":"2022-12-26T16:16:00.836Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Hello world\n","slug":"demo","date":"2022-12-26T16:16:00.835Z","categories_index":"","tags_index":"dsb,hexo,update","author_index":"Aurora"},{"id":"fc7c6634e7fe243bedc26a823edb02cb","title":"Почти готово","content":"\nНаконец-то я восстановил всё и адаптировал нужный функционал для собственной темы для Hexo\n","slug":"blog-2022-08-21","date":"2022-08-20T22:20:59.000Z","categories_index":"Void","tags_index":"блог,dsb,hexo,void,сайт","author_index":"Aurora"},{"id":"8dd286d8327c4322a7a7c6d04c5dd02c","title":"Dirt 3","content":"\n\n\n\n_DiRT 3_\n\n\n\n\n![Dirt 2](&#x2F;img&#x2F;cover&#x2F;dirt3.jpg)\n\n\n\nРазработчик\n[Codemasters Southam](&#x2F;tags&#x2F;Codemasters)\n\n\nИздатель\n[Codemasters](&#x2F;tags&#x2F;Codemasters)\n\n\n“Локализация компьютерной игры“\nБука\n\n\nСерия игр\n[Colin McRae Rally](&#x2F;tags&#x2F;Colin-McRae-Rally)\n\n\nДата релиза\n24 мая 2011\n\n\nТехнические данные\n\n\n\n[Платформы] “Компьютерная платформа”)\n[Windows](&#x2F;tags&#x2F;Windows), [Mac OS](&#x2F;tags&#x2F;Mac), [PlayStation 3](&#x2F;tags&#x2F;PS3), [Xbox 360](&#x2F;tags&#x2F;Xbox-360&#x2F;)\n\n\n[Игровой движок] “Игровой движок”\n[EGO 2.0](&#x2F;2018&#x2F;11&#x2F;12&#x2F;ego_engine&#x2F;)\n\n\nDiRT 3 (перев. «Грязь») — является восьмой гоночной игрой серии Colin McRae Rally, разработана Codemasters. Продолжение предыдущей игры серии — DiRT 2. DiRT 3 базируется на игровом движке EGO 2.0.\nОсновная часть игрового процесса посвящена зарабатыванию очков репутации, которые игрок получает, участвуя в различных соревнованиях, и которые нужны для привлечения внимания спонсоров, предоставляющих новые транспортные средства. Также в игре присутствует режим джимханы, где игрок должен проходить трассу с препятствиями, при этом выполняя трюки, чтобы получать очки. Кроме того в игре существуют и режимы «для вечеринок», в которых целями являются разрушение деревянных строений, распространение зомби-инфекций и захват флага. В хардкорном режиме игроку доступен только вид из кабины, отсутствуют помощники, появляются снег и дождь, а также возможность загружать видеоповторы сразу на Youtube.\nВсего в игре 62 автомобиля (44 основных, остальные из разных DLC). Большинство автомобилей открыты сразу, но не все из них можно использовать в Турне. Некоторые автомобили могут не подходить по дисциплине, классу или по уровню репутации водителя. К каждому автомобилю присутствует множество видов раскрасок команд, каждая из которых имеет свой стиль оформления и типы бонусных заданий, выполняемых в гонках. По мере карьерного роста открываются как новые автомобили, так и раскраски к ним.\nИгра была тепло воспринята критиками и была определена, как «хорошее сочетание соревнования и веселья для непринуждённого отдыха».\n","slug":"gms_Dirt3","date":"2022-08-20T22:20:59.000Z","categories_index":"Gms","tags_index":"Dirt,Games,Игры","author_index":"Aurora"}]